---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: hw-6-app-gateway
  namespace: ingress-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: hw-6-app-virtual-service
  namespace: ingress-gateway
spec:
  hosts:
  - "*"
  gateways:
  - hw-6-app-gateway
  http:
    - name: auth-whitelisted
      match:
        - uri:
            prefix: /ms-auth/
      rewrite:
        uri: /
      route:
        - destination:
            port:
              number: 9000
            host: ms-auth-api-service.ms-auth.svc.cluster.local
    - match:
      - uri:
          prefix: /ms-profile/
      rewrite:
        uri: /
      route:
        - destination:
            port:
              number: 9000
            host: ms-profile-api-service.ms-profile.svc.cluster.local
---
apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:
  name: "jwt-auth"
  namespace: istio-system
spec:
  selector:
    matchLabels:
      istio: ingressgateway
  jwtRules: # Включаем фильтр для анализа JWT токена
    - issuer: "http://ms-auth-api-service"
      jwksUri: "http://ms-auth-api-service.ms-auth.svc.cluster.local:9000/srv/auth/.well-known/jwks.json"
      forwardOriginalToken: true
      outputPayloadToHeader: "x-jwt-token"
      fromHeaders:
        - name: "x-auth-token"
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: "authz"
  namespace: istio-system
spec:
  selector:
    matchLabels:
      istio: ingressgateway
  action: ALLOW
  rules:
    - to:
        - operation:
            paths: ["/ms-auth*"] # Разрешаем доступ к /auth всем запросам
    - to:
      - operation:
          paths: ["/ms-profile*"]
      when:
      - key: request.auth.claims[iss]
        values: ["http://ms-auth-api-service"]
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: external-auth
  namespace: istio-system
spec:
  workloadSelector:
    labels:
      istio: ingressgateway
      app: istio-ingressgateway
  configPatches:
    - applyTo: CLUSTER # Добавляем кластер с адресом сервера аутентификации.
      match:
        context: ANY
        cluster: { }
      patch:
        operation: ADD
        value:
          name: ext_authz
          connect_timeout: 5s
          type: LOGICAL_DNS
          lb_policy: ROUND_ROBIN
          http_protocol_options: { }
          load_assignment:
            cluster_name: ext_authz
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: ms-auth-api-service.ms-auth.svc.cluster.local
                          port_value: 9000

    - applyTo: HTTP_FILTER # Добавляем фильтр аутентификации на все маршруты в Gateway
      match:
        context: GATEWAY
      patch:
        operation: INSERT_BEFORE # Аутентификация должна отработать раньше фильтра JWT, чтобы он подхватил токен, переданный из auth-service
        filterClass: AUTHN
        value:
          name: envoy.filters.http.ext_authz
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
            stat_prefix: ext_authz
            transport_api_version: V3
            http_service:
              server_uri:
                uri: http://ms-auth-api-service.ms-auth.svc.cluster.local
                cluster: ext_authz
                timeout: 10s
              path_prefix: "/srv/auth/verify_auth?req_url="
              authorization_request:
                allowed_headers:
                  patterns:
                    - exact: "cookie"
              authorization_response:
                allowed_upstream_headers:
                  patterns:
                    - exact: "x-user-id"
                    - exact: "x-profile-id"
                    - exact: "x-auth-token"

    - applyTo: HTTP_ROUTE # Отключаем аутентификацию для маршрутов связанных с методом входа и выхода
      match:
        context: GATEWAY
        routeConfiguration:
          vhost:
            route:
              name: "auth-whitelisted"
      patch:
        operation: MERGE
        value:
          typed_per_filter_config:
            envoy.filters.http.ext_authz:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
              disabled: true