{
	"info": {
		"_postman_id": "d3cead9f-a1df-4261-bf74-57de1b1c4c66",
		"name": "otus-saga",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Cart created with zero balance\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.moneyAmount).to.eql(0.0);",
							"",
							"    pm.environment.set(\"cartNumber\", jsonData.cartNumber);",
							"    pm.environment.set(\"cartId\", jsonData.id);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cartNumber\": \"123\",\n    \"userId\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/ms-payment/api/carts",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ms-payment",
						"api",
						"carts"
					]
				}
			},
			"response": []
		},
		{
			"name": "increase cart balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Cart amount is 1000\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.moneyAmount).to.eql(1000.0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 1000\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/ms-payment/api/carts/1/replenish",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ms-payment",
						"api",
						"carts",
						"1",
						"replenish"
					]
				}
			},
			"response": []
		},
		{
			"name": "add products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Added 2 products\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"name\": \"product_1\",\n        \"quantity\": 10\n    },\n    {\n        \"name\": \"product_2\",\n        \"quantity\": 20\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/ms-inventory/api/products",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ms-inventory",
						"api",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "add courier",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/ms-delivery/api/couriers",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ms-delivery",
						"api",
						"couriers"
					]
				}
			},
			"response": []
		},
		{
			"name": "create order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Order status is CREATED\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"CREATED\");",
							"",
							"    pm.environment.set(\"orderId\", jsonData.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-idempotency-key",
						"value": "test",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"products\": [\n        {\n            \"id\": 1,\n            \"quantity\": 2,\n            \"price\": 100\n        },\n        {\n            \"id\": 2,\n            \"quantity\": 3,\n            \"price\": 200\n        }\n    ],\n    \"address\": \"Moscow\",\n    \"cartNumber\": \"123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/ms-order/api/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ms-order",
						"api",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "get orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Order is delivering\", function () {",
							"    var jsonData = pm.response.json();",
							"    var targetOrder = jsonData.orders.find(",
							"        order => order.id == pm.environment.get(\"orderId\")",
							"    )",
							"    pm.expect(targetOrder.status).to.eql('DELIVERING');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/ms-order/api/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ms-order",
						"api",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "get carts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Cart balance changed\", function () {",
							"    var jsonData = pm.response.json();",
							"",
							"    var cartNumber = pm.globals.get(\"cartNumber\");",
							"    var targetCart = jsonData.find(",
							"        cart => cart.id == cartNumber",
							"    )",
							"    pm.expect(targetCart.moneyAmount).to.eql(200.0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/ms-payment/api/carts",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ms-payment",
						"api",
						"carts"
					]
				}
			},
			"response": []
		}
	]
}